import sys
from types import TracebackType
from typing import Any, Coroutine, Generator, TypeVar

from .tasks import Task

_T = TypeVar("_T")

if sys.version_info >= (3, 11):
    class TaskGroup:
        def __init__(self, name: str | None = ...): ...
        def get_name(self) -> str: ...
        def __aenter__(self) -> TaskGroup: ...
        def __aexit__(self, et: type | None, exc: BaseException | None, tb: TracebackType | None) -> None: ...
        def create_task(
            self, coro: Generator[Any, None, _T] | Coroutine[Any, Any, _T], *, name: str | None = ...
        ) -> Task[_T]: ...
